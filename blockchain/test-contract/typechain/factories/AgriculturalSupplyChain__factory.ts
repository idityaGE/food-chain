/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AgriculturalSupplyChain,
  AgriculturalSupplyChainInterface,
} from "../AgriculturalSupplyChain";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchTransactions",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createProductBatch",
    inputs: [
      {
        name: "_productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "_qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBatchDetails",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchTransactions",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct AgriculturalSupplyChain.Transaction[]",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "timestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionHash",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderBatches",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderDetails",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isVerifiedStakeholder",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextBatchId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "productBatches",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerStakeholder",
    inputs: [
      {
        name: "_stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeholderBatches",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakeholders",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferBatch",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "updateAdmin",
    inputs: [
      {
        name: "_newAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateProductStatus",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyQuality",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_grade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "_newQualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ProductBatchCreated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "farmer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "productType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductStatusUpdated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductTransferred",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QualityVerified",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "grade",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "verifier",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeholderRegistered",
    inputs: [
      {
        name: "stakeholder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523461002757610011610132565b61001961002c565b6131a061015382396131a090f35b610032565b60405190565b5f80fd5b5f1b90565b9061004c60018060a01b0391610036565b9181191691161790565b60018060a01b031690565b90565b61007861007361007d92610056565b610061565b610056565b90565b61008990610064565b90565b61009590610080565b90565b90565b906100b06100ab6100b79261008c565b610098565b825461003b565b9055565b90565b90565b6100d56100d06100da926100bb565b610061565b6100be565b90565b906100e95f1991610036565b9181191691161790565b61010761010261010c926100be565b610061565b6100be565b90565b90565b9061012761012261012e926100f3565b61010f565b82546100dd565b9055565b61013c335f61009b565b61015061014960016100c1565b6001610112565b56fe60806040526004361015610013575b61146e565b61001d5f3561012b565b80623be153146101265780631bd9baac146101215780636b396d981461011c5780636b5a3a2b146101175780636fde5465146101125780638369a64f1461010d5780638462a7f814610108578063920e2621146101035780639d47dcc0146100fe578063a7fede55146100f9578063aaddba58146100f4578063ae51cef9146100ef578063c07cfca9146100ea578063c1464400146100e5578063d40d51b8146100e0578063e2f273bd146100db5763f851a4400361000e57611439565b6113bd565b611386565b6112c5565b61122a565b6110f2565b611034565b610ea8565b610c4f565b610acf565b610a50565b6109fd565b610929565b6108b0565b610807565b61069f565b61032f565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906101739061014b565b810190811067ffffffffffffffff82111761018d57604052565b610155565b906101a561019e610131565b9283610169565b565b67ffffffffffffffff81116101c5576101c160209161014b565b0190565b610155565b90825f939282370152565b909291926101ea6101e5826101a7565b610192565b9381855260208501908284011161020657610204926101ca565b565b610147565b9080601f8301121561022957816020610226933591016101d5565b90565b610143565b90565b61023a8161022e565b0361024157565b5f80fd5b9050359061025282610231565b565b9060e082820312610308575f82013567ffffffffffffffff8111610303578161027e91840161020b565b9261028c8260208501610245565b9261029a8360408301610245565b926102a88160608401610245565b926102b68260808501610245565b9260a081013567ffffffffffffffff81116102fe57836102d791830161020b565b9260c082013567ffffffffffffffff81116102f9576102f6920161020b565b90565b61013f565b61013f565b61013f565b61013b565b6103169061022e565b9052565b919061032d905f6020850194019061030d565b565b3461036657610362610351610345366004610254565b95949094939193611f6b565b610359610131565b9182918261031a565b0390f35b610137565b91906040838203126103935780610387610390925f8601610245565b93602001610245565b90565b61013b565b90565b6103af6103aa6103b49261022e565b610398565b61022e565b90565b906103c19061039b565b5f5260205260405f2090565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b6103f7816103e1565b821015610411576104096005916103e5565b910201905f90565b6103cd565b5f1c90565b60018060a01b031690565b61043261043791610416565b61041b565b90565b6104449054610426565b90565b90565b61045661045b91610416565b610447565b90565b610468905461044a565b90565b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801561049f575b602083101461049a57565b61046b565b91607f169161048f565b60209181520190565b5f5260205f2090565b905f92918054906104d56104ce8361047f565b80946104a9565b916001811690815f1461052c57506001146104f0575b505050565b6104fd91929394506104b2565b915f925b81841061051457505001905f80806104eb565b60018160209295939554848601520191019290610501565b92949550505060ff19168252151560200201905f80806104eb565b90610551916104bb565b90565b9061057461056d92610564610131565b93848092610547565b0383610169565b565b6105819060046103b7565b9061058b826103e1565b8110156105dd5761059b916103ee565b506105a75f820161043a565b916105b46001830161043a565b916105c16002820161045e565b916105da60046105d36003850161045e565b9301610554565b90565b5f80fd5b60018060a01b031690565b6105f5906105e1565b90565b610601906105ec565b9052565b5190565b60209181520190565b90825f9392825e0152565b61063c61064560209361064a9361063381610605565b93848093610609565b95869101610612565b61014b565b0190565b919361068561069c969461067b61068f949761067160a08801995f8901906105f8565b60208701906105f8565b604085019061030d565b606083019061030d565b608081840391015261061d565b90565b346106d4576106d06106bb6106b536600461036b565b90610576565b916106c7959395610131565b9586958661064e565b0390f35b610137565b6106e2816105ec565b036106e957565b5f80fd5b905035906106fa826106d9565b565b91906040838203126107245780610718610721925f86016106ed565b93602001610245565b90565b61013b565b61073d610738610742926105e1565b610398565b6105e1565b90565b61074e90610729565b90565b61075a90610745565b90565b9061076790610751565b5f5260205260405f2090565b5490565b5f5260205f2090565b61078981610773565b8210156107a35761079b600191610777565b910201905f90565b6103cd565b1c90565b6107bc9060086107c193026107a8565b610447565b90565b906107cf91546107ac565b90565b6107dd90600561075d565b6107e681610773565b82101561080357610800916107fa91610780565b906107c4565b90565b5f80fd5b346108385761083461082361081d3660046106fc565b906107d2565b61082b610131565b9182918261031a565b0390f35b610137565b6004111561084757565b5f80fd5b905035906108588261083d565b565b916060838303126108a657610871825f8501610245565b9261087f836020830161084b565b92604082013567ffffffffffffffff81116108a15761089e920161020b565b90565b61013f565b61013b565b5f0190565b346108df576108c96108c336600461085a565b9161212a565b6108d1610131565b806108db816108ab565b0390f35b610137565b906020828203126108fd576108fa915f016106ed565b90565b61013b565b151590565b61091090610902565b9052565b9190610927905f60208501940190610907565b565b346109595761095561094461093f3660046108e4565b61213b565b61094c610131565b91829182610914565b0390f35b610137565b5190565b60209181520190565b60200190565b61097a9061022e565b9052565b9061098b81602093610971565b0190565b60200190565b906109b26109ac6109a58461095e565b8093610962565b9261096b565b905f5b8181106109c25750505090565b9091926109db6109d5600192865161097e565b9461098f565b91019190916109b5565b6109fa9160208201915f818403910152610995565b90565b34610a2d57610a29610a18610a133660046108e4565b61220f565b610a20610131565b918291826109e5565b0390f35b610137565b5f910312610a3c57565b61013b565b610a4d60015f906107c4565b90565b34610a8057610a60366004610a32565b610a7c610a6b610a41565b610a73610131565b9182918261031a565b0390f35b610137565b60041115610a8f57565b5f80fd5b90503590610aa082610a85565b565b9190604083820312610aca5780610abe610ac7925f8601610245565b93602001610a93565b90565b61013b565b34610afe57610ae8610ae2366004610aa2565b90612388565b610af0610131565b80610afa816108ab565b0390f35b610137565b90602082820312610b1c57610b19915f01610245565b90565b61013b565b634e487b7160e01b5f52602160045260245ffd5b60041115610b3f57565b610b21565b90610b4e82610b35565b565b610b5990610b44565b90565b610b6590610b50565b9052565b60041115610b7357565b610b21565b90610b8282610b69565b565b610b8d90610b78565b90565b610b9990610b84565b9052565b999596610c10610c4c9c9a9598610c06610c2f9860808f610bff610c3d9f99610c1a99610c249c610be7610bf493610bdd6101608801945f8901906105f8565b60208701906105f8565b848203604086015261061d565b9e606083019061030d565b019061030d565b60a08d019061030d565b60c08b0190610b5c565b60e0890190610b90565b61010087019061030d565b84820361012086015261061d565b9161014081840391015261061d565b90565b34610c8c57610c88610c6a610c65366004610b03565b6124cf565b97610c7f9b999b979197969296959395610131565b9b8c9b8c610b9d565b0390f35b610137565b90610c9b9061039b565b5f5260205260405f2090565b60ff1690565b610cb9610cbe91610416565b610ca7565b90565b610ccb9054610cad565b90565b60081c90565b60ff1690565b610ce6610ceb91610cce565b610cd4565b90565b610cf89054610cda565b90565b60ff1690565b610d0d610d1291610416565b610cfb565b90565b610d1f9054610d01565b90565b610d2d906003610c91565b610d385f820161045e565b91610d456001830161043a565b91610d526002820161043a565b91610d5f60038301610554565b91610d6c6004820161045e565b91610d796005830161045e565b91610d866006820161045e565b91610d9360078301610cc1565b91610da060078201610cee565b91610dad6008830161045e565b91610dba60098201610554565b91610dd3600b610dcc600a8501610554565b9301610d15565b90565b9d9c9a94958e610e6f610ea69e9a610e65610e8f9b6101809f98610e9e9f9796610e51610e4661010099610e819e610e39610e5b96610e769f610e2f9060208f610e286101a08201985f83019061030d565b01906105f8565b60408d01906105f8565b8a820360608c015261061d565b9e608089019061030d565b60a087019061030d565b60c085019061030d565b60e0830190610b5c565b0190610b90565b6101208c019061030d565b8982036101408b015261061d565b9087820361016089015261061d565b940190610907565b565b34610ee857610ee4610ec3610ebe366004610b03565b610d22565b99610edb9d9b9d999199989298979397969496610131565b9d8e9d8e610dd6565b0390f35b610137565b5190565b60209181520190565b60200190565b610f09906105ec565b9052565b610f2c610f35602093610f3a93610f2381610605565b938480936104a9565b95869101610612565b61014b565b0190565b610f9f91608060a0820192610f595f8201515f850190610f00565b610f6b60208201516020850190610f00565b610f7d60408201516040850190610971565b610f8f60608201516060850190610971565b0151906080818403910152610f0d565b90565b90610fac91610f3e565b90565b60200190565b90610fc9610fc283610eed565b8092610ef1565b9081610fda60208302840194610efa565b925f915b838310610fed57505050505090565b9091929394602061100f61100983856001950387528951610fa2565b97610faf565b9301930191939290610fde565b6110319160208201915f818403910152610fb5565b90565b346110645761106061104f61104a366004610b03565b6126b3565b611057610131565b9182918261101c565b0390f35b610137565b6004111561107357565b610b21565b9061108282611069565b565b61108d90611078565b90565b61109990611084565b9052565b91936110d86110cd6110e2936110ef9896976110c060a08801925f890190611090565b868203602088015261061d565b956040850190610907565b606083019061030d565b608081840391015261061d565b90565b346111265761112261110d6111083660046108e4565b6126ce565b91611119959395610131565b9586958661109d565b0390f35b610137565b9061113590610751565b5f5260205260405f2090565b60a01c90565b60ff1690565b61115961115e91611141565b611147565b90565b61116b905461114d565b90565b61117990600261112b565b906111855f830161043a565b916111915f8201611161565b9161119e60018301610554565b916111ab60028201610d15565b916111c460046111bd6003850161045e565b9301610554565b90565b9261120561122797959692611210926111f861121a966111ee60c08a01945f8b01906105f8565b6020890190611090565b868203604088015261061d565b956060850190610907565b608083019061030d565b60a081840391015261061d565b90565b346112615761125d6112456112403660046108e4565b61116e565b92611254969496929192610131565b968796876111c7565b0390f35b610137565b906080828203126112c05761127d815f8401610245565b9261128b82602085016106ed565b926112998360408301610245565b92606082013567ffffffffffffffff81116112bb576112b8920161020b565b90565b61013f565b61013b565b6112dc6112d3366004611266565b92919091612c27565b6112e4610131565b806112ee816108ab565b0390f35b600411156112fc57565b5f80fd5b9050359061130d826112f2565b565b9060808282031261138157611326815f84016106ed565b926113348260208501611300565b92604081013567ffffffffffffffff811161137c578361135591830161020b565b92606082013567ffffffffffffffff811161137757611374920161020b565b90565b61013f565b61013f565b61013b565b346113b8576113a261139936600461130f565b9291909161306f565b6113aa610131565b806113b4816108ab565b0390f35b610137565b346113eb576113d56113d03660046108e4565b61315f565b6113dd610131565b806113e7816108ab565b0390f35b610137565b61140090600861140593026107a8565b61041b565b90565b9061141391546113f0565b90565b6114215f5f90611408565b90565b9190611437905f602085019401906105f8565b565b3461146957611449366004610a32565b611465611454611416565b61145c610131565b91829182611424565b0390f35b610137565b5f80fd5b5f90565b5f7f5374616b65686f6c646572206e6f742076657269666965640000000000000000910152565b6114aa6018602092610609565b6114b381611476565b0190565b6114cc9060208101905f81830391015261149d565b90565b156114d657565b6114de610131565b62461bcd60e51b8152806114f4600482016114b7565b0390fd5b906115269796959493929161152161151c600261151681339061112b565b01610d15565b6114cf565b611d4e565b90565b5f7f4f6e6c79206661726d6572732063616e20637265617465206261746368657300910152565b61155d601f602092610609565b61156681611529565b0190565b61157f9060208101905f818303910152611550565b90565b1561158957565b611591610131565b62461bcd60e51b8152806115a76004820161156a565b0390fd5b90565b6115c26115bd6115c7926115ab565b610398565b61022e565b90565b5f7f5175616e74697479206d7573742062652067726561746572207468616e203000910152565b6115fe601f602092610609565b611607816115ca565b0190565b6116209060208101905f8183039101526115f1565b90565b1561162a57565b611632610131565b62461bcd60e51b8152806116486004820161160b565b0390fd5b60207f7420646174650000000000000000000000000000000000000000000000000000917f4578706972792064617465206d757374206265206166746572206861727665735f8201520152565b6116a66026604092610609565b6116af8161164c565b0190565b6116c89060208101905f818303910152611699565b90565b156116d257565b6116da610131565b62461bcd60e51b8152806116f0600482016116b3565b0390fd5b5f7f5072696365206d7573742062652067726561746572207468616e203000000000910152565b611728601c602092610609565b611731816116f4565b0190565b61174a9060208101905f81830391015261171b565b90565b1561175457565b61175c610131565b62461bcd60e51b81528061177260048201611735565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b6117939061022e565b5f1981146117a15760010190565b611776565b5f1b90565b906117b75f19916117a6565b9181191691161790565b90565b906117d96117d46117e09261039b565b6117c1565b82546117ab565b9055565b6117ef6101a0610192565b90565b906117fc9061022e565b9052565b9061180a906105ec565b9052565b52565b9061181b90610b44565b9052565b9061182990610b78565b9052565b9061183790610902565b9052565b634e487b7160e01b5f525f60045260245ffd5b611858905161022e565b90565b61186590516105ec565b90565b9061187960018060a01b03916117a6565b9181191691161790565b90565b9061189b6118966118a292610751565b611883565b8254611868565b9055565b5190565b601f602091010490565b1b90565b919060086118d39102916118cd5f19846118b4565b926118b4565b9181191691161790565b91906118f36118ee6118fb9361039b565b6117c1565b9083546118b8565b9055565b6119119161190b611472565b916118dd565b565b5b81811061191f575050565b8061192c5f6001936118ff565b01611914565b9190601f8111611942575b505050565b61194e611973936104b2565b90602061195a846118aa565b8301931061197b575b61196c906118aa565b0190611913565b5f808061193d565b915061196c81929050611963565b90611999905f19906008026107a8565b191690565b816119a891611989565b906002021790565b906119ba81610605565b9067ffffffffffffffff8211611a7a576119de826119d8855461047f565b85611932565b602090601f8311600114611a1257918091611a01935f92611a06575b505061199e565b90555b565b90915001515f806119fa565b601f19831691611a21856104b2565b925f5b818110611a6257509160029391856001969410611a48575b50505002019055611a04565b611a58910151601f841690611989565b90555f8080611a3c565b91936020600181928787015181550195019201611a24565b610155565b90611a89916119b0565b565b611a959051610b44565b90565b90611aa460ff916117a6565b9181191691161790565b611ab790610b44565b90565b90565b90611ad2611acd611ad992611aae565b611aba565b8254611a98565b9055565b611ae79051610b78565b90565b60081b90565b90611afd61ff0091611aea565b9181191691161790565b611b1090610b78565b90565b90565b90611b2b611b26611b3292611b07565b611b13565b8254611af0565b9055565b611b409051610902565b90565b611b4c90610902565b90565b90565b90611b67611b62611b6e92611b43565b611b4f565b8254611a98565b9055565b90611cb5610180600b611cbb94611b965f8201611b905f880161184e565b906117c4565b611baf60018201611ba96020880161185b565b90611886565b611bc860028201611bc26040880161185b565b90611886565b611be160038201611bdb606088016118a6565b90611a7f565b611bfa60048201611bf46080880161184e565b906117c4565b611c1360058201611c0d60a0880161184e565b906117c4565b611c2c60068201611c2660c0880161184e565b906117c4565b611c4560078201611c3f60e08801611a8b565b90611abd565b611c5f60078201611c596101008801611add565b90611b16565b611c7960088201611c73610120880161184e565b906117c4565b611c9360098201611c8d61014088016118a6565b90611a7f565b611cad600a8201611ca761016088016118a6565b90611a7f565b019201611b36565b90611b52565b565b90611cc791611b72565b565b90565b5f5260205f2090565b5490565b611ce281611cd5565b821015611cfc57611cf4600191611ccc565b910201905f90565b6103cd565b9081549168010000000000000000831015611d315782611d29916001611d2f95018155611cd9565b906118dd565b565b610155565b611d4b9160208201915f81840391015261061d565b90565b9691949695909593929350600233611d659161112b565b5f01611d7090611161565b5f611d7a90611078565b90611d8490611078565b14611d8e90611582565b845f611d99906115ae565b90611da39061022e565b11611dad90611623565b8284611db89061022e565b90611dc29061022e565b11611dcc906116cb565b865f611dd7906115ae565b90611de19061022e565b11611deb9061174d565b611df5600161045e565b611dfe8161178a565b611e099060016117c4565b9687953395339589929190915f935f9596979860019a611e276117e4565b9c5f8e0190611e35916117f2565b60208d0190611e4391611800565b60408c0190611e5191611800565b60608b0190611e5f9161180e565b60808a0190611e6d916117f2565b60a0890190611e7b916117f2565b60c0880190611e89916117f2565b60e0870190611e9791611811565b610100860190611ea69161181f565b610120850190611eb5916117f2565b610140840190611ec49161180e565b610160830190611ed39161180e565b610180820190611ee29161182d565b600383611eee91610c91565b90611ef891611cbd565b600533611f049161075d565b611f0d90611cc9565b82611f1791611d01565b81903390917fb4aba86f9fc3656c19a28bb18be5c8728b43bebe1bc09856fc32ca4a43d8aaa490611f479061039b565b91611f5190610751565b92611f5a610131565b611f65819282611d36565b0390a390565b90611f82969594939291611f7d611472565b6114f8565b90565b90611fae9291611fa9611fa46002611f9e81339061112b565b01610d15565b6114cf565b612032565b565b5f7f426174636820646f6573206e6f74206578697374000000000000000000000000910152565b611fe46014602092610609565b611fed81611fb0565b0190565b6120069060208101905f818303910152611fd7565b90565b1561201057565b612018610131565b62461bcd60e51b81528061202e60048201611ff1565b0390fd5b9061205b9291612056612051600b61204b846003610c91565b01610d15565b612009565b612079565b565b90565b5190565b9190612077905f60208501940190610b90565b565b909161209383600761208d60038690610c91565b01611b16565b6120a461209f8261205d565b612060565b6120b66120b05f6115ae565b9161022e565b1161210c575b5033906121076120f56120ef7f76826af0a60f79614c94f6c8a71ac318e3d8e9e7dc244b499e786db3c1f549d49361039b565b93610751565b936120fe610131565b91829182612064565b0390a3565b61212490600a61211e60038590610c91565b01611a7f565b5f6120bc565b906121359291611f85565b565b5f90565b60026121536121599261214c612137565b508261112b565b01610d15565b90565b606090565b60209181520190565b612174905461044a565b90565b60010190565b9061219a61219461218d84610773565b8093612161565b92610777565b905f5b8181106121aa5750505090565b9091926121ca6121c46001926121bf8761216a565b61097e565b94612177565b910191909161219d565b906121de9161217d565b90565b906122016121fa926121f1610131565b938480926121d4565b0383610169565b565b61220c906121e1565b90565b61222661222b9161221e61215c565b50600561075d565b612203565b90565b5f7f4e6f7420746865206261746368206f776e657200000000000000000000000000910152565b6122626013602092610609565b61226b8161222e565b0190565b6122849060208101905f818303910152612255565b90565b1561228e57565b612296610131565b62461bcd60e51b8152806122ac6004820161226f565b0390fd5b906122eb916122e66122ce60016122c8846003610c91565b0161043a565b6122e06122da336105ec565b916105ec565b14612287565b6122ed565b565b906123159161231061230b600b612305846003610c91565b01610d15565b612009565b61232c565b565b919061232a905f60208501940190610b5c565b565b61234482600761233e60038590610c91565b01611abd565b6123836123717fb8a3401adfc11253c3aff18e4b48103cec45c852b9afc487c23f32e26746242c9261039b565b9261237a610131565b91829182612317565b0390a2565b90612392916122b0565b565b5f90565b606090565b5f90565b5f90565b90816123e96123e4600b6123ee9f9e9d9c9b9a99989796958f8f8f8f8f8f8f8f8f8f8f6123de9b50505050505050505050506003610c91565b01610d15565b612009565b61240a565b909192939495969798999a565b90565b61240790610554565b90565b916124339b999795939161242e9b9997959350505050505050505050506003610c91565b6123fb565b906124406001830161043a565b9161244d6002820161043a565b92600382019261245f6004840161045e565b9261246c6005820161045e565b926124796006830161045e565b9261248660078401610cc1565b9261249360078201610cee565b926124a06008830161045e565b926124cc6124c66124ba600a600987019601949d9c6123fe565b9a9998979695946123fe565b926123fe565b90565b612535906124db612394565b6124e3612394565b6124eb612398565b6124f3611472565b6124fb611472565b612503611472565b61250b61239d565b916125146123a1565b9361251d611472565b95612526612398565b9761252f612398565b996123a5565b909192939495969798999a565b606090565b9061256f9161256a612565600b61255f856003610c91565b01610d15565b612009565b61269b565b90565b67ffffffffffffffff811161258a5760208091020190565b610155565b906125a161259c83612572565b610192565b918252565b6125b060a0610192565b90565b9061263261262960046125c46125a6565b946125db6125d35f830161043a565b5f8801611800565b6125f36125ea6001830161043a565b60208801611800565b61260b6126026002830161045e565b604088016117f2565b61262361261a6003830161045e565b606088016117f2565b01610554565b6080840161180e565b565b61263d906125b3565b90565b9061264a826103e1565b6126538161258f565b9261266160208501916103e5565b5f915b8383106126715750505050565b6005602060019261268185612634565b815201920192019190612664565b61269890612640565b90565b6126b0916126ab915060046103b7565b61268f565b90565b6126c4906126bf612542565b612547565b90565b5f90565b90565b61270961270e916126dd6126c7565b506126e6612398565b506126ef612137565b506126f8611472565b50612701612398565b50600261112b565b6126cb565b9061271a5f8301611161565b91600181019261272c60028301610d15565b9261275261274a60046127416003870161045e565b950193966123fe565b9493926123fe565b90565b9061279293929161278d612775600161276f846003610c91565b0161043a565b612787612781336105ec565b916105ec565b14612287565b612794565b565b906127be9392916127b96127b4600b6127ae846003610c91565b01610d15565b612009565b612a2b565b565b5f7f5265636569766572206e6f742076657269666965640000000000000000000000910152565b6127f46015602092610609565b6127fd816127c0565b0190565b6128169060208101905f8183039101526127e7565b90565b1561282057565b612828610131565b62461bcd60e51b81528061283e60048201612801565b0390fd5b5f7f496e73756666696369656e74207061796d656e74000000000000000000000000910152565b6128766014602092610609565b61287f81612842565b0190565b6128989060208101905f818303910152612869565b90565b156128a257565b6128aa610131565b62461bcd60e51b8152806128c060048201612883565b0390fd5b90565b6128d160a0610192565b90565b5f5260205f2090565b5490565b6128ea816128dd565b821015612904576128fc6005916128d4565b910201905f90565b6103cd565b9061297f608060046129859461292c5f82016129265f880161185b565b90611886565b6129456001820161293f6020880161185b565b90611886565b61295e600282016129586040880161184e565b906117c4565b612977600382016129716060880161184e565b906117c4565b0192016118a6565b90611a7f565b565b91906129985761299691612909565b565b61183b565b90815491680100000000000000008310156129cd57826129c59160016129cb950181556128e1565b90612987565b565b610155565b6129db90610729565b90565b6129e7906129d2565b90565b6129f390610745565b90565b6129fe610131565b3d5f823e3d90fd5b612a15612a1b9193929361022e565b9261022e565b8203918211612a2657565b611776565b612a49612a446002612a3e81869061112b565b01610d15565b612819565b612a6634612a5f612a598661022e565b9161022e565b101561289b565b612a8283612a7c612a765f6115ae565b9161022e565b1161174d565b612b45612a99612a9460038490610c91565b6123fb565b94612ac2612aa96001880161043a565b96612ab78660018301611886565b600760019101611abd565b612ae0612ad9612ad46005879061075d565b611cc9565b8490611d01565b612af4612aef600485906103b7565b6128c4565b612b408792612b378791612b2e42612b258c9395612b1c612b136128c7565b9a5f8c01611800565b60208a01611800565b604088016117f2565b606086016117f2565b6080840161180e565b61299d565b5f808080612b5a612b55896129de565b6129ea565b8790828215612c1e575bf115612c195734612b7d612b778561022e565b9161022e565b11612bdd575b92909192612bd8612bc6612bc0612bba7f516c8b339c132041f2a10d0e873c5eaf4944299c02b458d7491b7f7ac1574d2f9461039b565b94610751565b94610751565b94612bcf610131565b9182918261031a565b0390a4565b5f808080612bf2612bed336129de565b6129ea565b612bfd348990612a06565b90828215612c10575bf1612b83576129f6565b506108fc612c06565b6129f6565b506108fc612b64565b90612c33939291612755565b565b60207f6f6e000000000000000000000000000000000000000000000000000000000000917f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201520152565b612c8f6022604092610609565b612c9881612c35565b0190565b612cb19060208101905f818303910152612c82565b90565b15612cbb57565b612cc3610131565b62461bcd60e51b815280612cd960048201612c9c565b0390fd5b90612d0d939291612d0833612d02612cfc612cf75f61043a565b6105ec565b916105ec565b14612cb4565b612f68565b565b612d23612d1e612d28926115ab565b610398565b6105e1565b90565b612d3490612d0f565b90565b5f7f496e76616c696420616464726573730000000000000000000000000000000000910152565b612d6b600f602092610609565b612d7481612d37565b0190565b612d8d9060208101905f818303910152612d5e565b90565b15612d9757565b612d9f610131565b62461bcd60e51b815280612db560048201612d78565b0390fd5b5f7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000910152565b612ded6014602092610609565b612df681612db9565b0190565b612e0f9060208101905f818303910152612de0565b90565b15612e1957565b612e21610131565b62461bcd60e51b815280612e3760048201612dfa565b0390fd5b612e4560c0610192565b90565b90612e5290611078565b9052565b612e609051611078565b90565b60a01b90565b90612e7860ff60a01b91612e63565b9181191691161790565b612e8b90611078565b90565b90565b90612ea6612ea1612ead92612e82565b612e8e565b8254612e69565b9055565b90612f3f60a06004612f4594612ed45f8201612ece5f880161185b565b90611886565b612eec5f8201612ee660208801612e56565b90612e91565b612f0560018201612eff604088016118a6565b90611a7f565b612f1e60028201612f1860608801611b36565b90611b52565b612f3760038201612f316080880161184e565b906117c4565b0192016118a6565b90611a7f565b565b90612f5191612eb1565b565b9190612f66905f60208501940190611090565b565b919261301a61302b9294612f9785612f90612f8a612f855f612d2b565b6105ec565b916105ec565b1415612d90565b612fc3612fab612fa68361205d565b612060565b612fbd612fb75f6115ae565b9161022e565b11612e12565b61301185936130088893612fff600191612ff6429597612fed612fe4612e3b565b9b5f8d01611800565b60208b01612e48565b6040890161180e565b6060870161182d565b608085016117f2565b60a0830161180e565b6130266002849061112b565b612f47565b61306a6130587f9f192d90f005c1163e866a86163fcf3aa01231f40671da1959d438410ae6c82c92610751565b92613061610131565b91829182612f53565b0390a2565b9061307b939291612cdd565b565b6130aa906130a53361309f6130996130945f61043a565b6105ec565b916105ec565b14612cb4565b61312e565b565b5f7f496e76616c69642061646d696e20616464726573730000000000000000000000910152565b6130e06015602092610609565b6130e9816130ac565b0190565b6131029060208101905f8183039101526130d3565b90565b1561310c57565b613114610131565b62461bcd60e51b81528061312a600482016130ed565b0390fd5b61315d906131578161315061314a6131455f612d2b565b6105ec565b916105ec565b1415613105565b5f611886565b565b6131689061307d565b56fea2646970667358221220f95aa59cff1ca2bb04c8ebe8aa46b3192a679fff47c1c447f8b9beff133a9ba564736f6c634300081e0033";

type AgriculturalSupplyChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgriculturalSupplyChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgriculturalSupplyChain__factory extends ContractFactory {
  constructor(...args: AgriculturalSupplyChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgriculturalSupplyChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AgriculturalSupplyChain__factory {
    return super.connect(runner) as AgriculturalSupplyChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgriculturalSupplyChainInterface {
    return new Interface(_abi) as AgriculturalSupplyChainInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgriculturalSupplyChain {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AgriculturalSupplyChain;
  }
}
